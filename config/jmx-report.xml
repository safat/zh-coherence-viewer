<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<config>
    <property type="INT" target="cache" name="AverageGetMillis">
        The average number of milliseconds per "get" invocation since the cache statistics were last reset.
    </property>
    <property type="INT" target="cache" name="AverageHitMillis">
        The average number of milliseconds per "get" invocation that is a hit.
    </property>
    <property type="INT" target="cache" name="AverageMissMillis">
        The average number of milliseconds per "get" invocation that is a miss.
    </property>
    <property type="INT" target="cache" name="AveragePutMillis">
        The average number of milliseconds per "put" invocation since the cache statistics were last reset.
    </property>
    <property type="INT" target="cache" name="BatchFactor">
        The BatchFactor attribute is used to calculate the soft-ripe time for write-behind queue entries. A queue entry
        is considered to be ripe for a write operation if it has been in the write-behind queue for no less than the
        QueueDelay interval. The soft-ripe time is the point in time prior to the actual ripe time after which an entry
        is included in a batch asynchronous write operation to the cache store (along with all other ripe and soft-ripe
        entries). This attribute is only applicable if asynchronous writes are enabled (that is, the value of the
        QueueDelay attribute is greater than zero) and the cache store implements the storeAll() method. The value of
        the element is expressed as a percentage of the QueueDelay interval. Valid values are doubles in the interval
        [0.0, 1.0].
    </property>
    <property type="INT" target="cache" name="CacheHits">
        The rough number of cache hits since the last time statistics were reset. A cache hit is a read operation
        invocation (that is, get()) for which an entry exists in this map.
    </property>
    <property type="INT" target="cache" name="CacheHitsMillis">
        The total number of milliseconds (since the last time statistics were reset) for the get() operations for which
        an entry existed in this map.
    </property>
    <property type="INT" target="cache" name="CacheMisses">
        The rough number of cache misses since the last time statistics were reset.
    </property>
    <property type="INT" target="cache" name="CacheMissesMillis">
        The total number of milliseconds (since the last time statistics were reset) for the get() operations for which
        no entry existed in this map.
    </property>
    <property type="INT" target="cache" name="CachePrunes">
        The number of prune operations since the last time statistics were reset. A prune operation occurs every time
        the cache reaches its high watermark as specified by the HighUnits attribute.
    </property>
    <property type="INT" target="cache" name="CachePrunesMillis">
        The total number of milliseconds for the prune operations since the last time statistics were reset.
    </property>
    <property type="INT" target="cache" name="Description">
        The cache description.
    </property>
    <property type="INT" target="cache" name="ExpiryDelay">
        The time-to-live for cache entries in milliseconds. Value of zero indicates that the automatic expiry is
        disabled. Change of this attribute will not affect already-scheduled expiry of existing entries.
    </property>
    <property type="INT" target="cache" name="FlushDelay">
        The number of milliseconds between cache flushes. Value of zero indicates that the cache will never flush.
    </property>
    <property type="INT" target="cache" name="HighUnits">
        The limit of the cache size measured in units. The cache will prune itself automatically once it reaches its
        maximum unit level. This is often referred to as the high water mark of the cache.
    </property>
    <property type="INT" target="cache" name="HitProbability">
        The rough probability (0&gt;= p&gt;= 1) that the next invocation will be a hit, based on the statistics
        collected
        since the last time statistics were reset.
    </property>
    <property type="INT" target="cache" name="LowUnits">
        The number of units to which the cache will shrink when it prunes. This is often referred to as a low water mark
        of the cache.
    </property>
    <property type="INT" target="cache" name="PersistenceType">
        The persistence type for this cache. Possible values include: NONE, READ-ONLY, WRITE-THROUGH, WRITE-BEHIND.
    </property>
    <property type="INT" target="cache" name="QueueDelay">
        The number of seconds that an entry added to a write-behind queue sits in the queue before being stored using a
        cache store. This attribute is only applicable if the persistence type is WRITE-BEHIND.
    </property>
    <property type="INT" target="cache" name="QueueSize">
        The size of the write-behind queue size. This attribute is only applicable if the persistence type is
        WRITE-BEHIND.
    </property>
    <property type="INT" target="cache" name="RefreshFactor">
        This attribute is used to calculate the soft-expiration time for cache entries. Soft-expiration is the point in
        time prior to the actual expiration after which any access request for an entry will schedule an asynchronous
        load request for the entry. This attribute is only applicable for a read write backing map which has an internal
        local cache with scheduled automatic expiration. The value of this element is expressed as a percentage of the
        internal local cache expiration interval. Valid values are doubles in the interval [0.0, 1.0]. If zero,
        refresh-ahead scheduling is disabled.
    </property>
    <property type="INT" target="cache" name="RefreshTime">
        The timestamp when this model was last retrieved from a corresponding node. For local servers it is the local
        time.
    </property>
    <property type="INT" target="cache" name="RequeueThreshold">
        The maximum size of the write-behind queue for which failed cache store write operations are requeued. If zero,
        the write-behind requeueing will be disabled. This attribute is only applicable if the persistence type is
        WRITE-BEHIND.
    </property>
    <property type="INT" target="cache" name="Size">
        The number of entries in the cache.
    </property>
    <property type="INT" target="cache" name="StoreAverageBatchSize">
        The average number of entries stored for each cache store write operation. A call to the store() method is
        counted as a batch of one, whereas a call to the storeAll() method is counted as a batch of the passed Map size.
        The value is -1 if the persistence type is NONE.
    </property>
    <property type="INT" target="cache" name="StoreAverageReadMillis">
        The average time (in milliseconds) spent per read operation. The value is -1 if the persistence type is NONE.
    </property>
    <property type="INT" target="cache" name="StoreAverageWriteMillis">
        The average time (in milliseconds) spent per write operation. The value is -1 if the persistence type is NONE.
    </property>
    <property type="INT" target="cache" name="StoreFailures">
        The total number of cache store failures (load, store and erase operations). The value is -1 if the persistence
        type is NONE.
    </property>
    <property type="INT" target="cache" name="StoreReadMillis">
        The cumulative time (in milliseconds) spent on load operations. The value is -1 if the persistence type is NONE.
    </property>
    <property type="INT" target="cache" name="StoreReads">
        The total number of load operations. The value is -1 if the persistence type is NONE.
    </property>
    <property type="INT" target="cache" name="StoreWriteMillis">
        The cumulative time (in milliseconds) spent on store and erase operations. The value is -1 if the persistence
        type is NONE or READ-ONLY.
    </property>
    <property type="INT" target="cache" name="StoreWrites">
        The total number of store and erase operations. The value is -1 if the persistence type is NONE or READ-ONLY.
    </property>
    <property type="INT" target="cache" name="TotalGets">
        The total number of get() operations since the last time statistics were reset.
    </property>
    <property type="INT" target="cache" name="TotalGetsMillis">
        The total number of milliseconds spent on get() operations since the last time statistics were reset.
    </property>
    <property type="INT" target="cache" name="TotalPuts">
        The total number of put() operations since the last time statistics were reset.
    </property>
    <property type="INT" target="cache" name="TotalPutsMillis">
        The total number of milliseconds spent on put() operations since the last time statistics were reset.
    </property>
    <property type="INT" target="cache" name="UnitFactor">
        The factor by which the Units, LowUnits and HighUnits properties are adjusted. Using a BINARY unit calculator,
        for example, the factor of 1048576 could be used to count megabytes instead of bytes.
    </property>
    <property type="INT" target="cache" name="Units">
        The size of the cache measured in units. This value needs to be adjusted by the UnitFactor.
    </property>
    <!-- ================ node ===================  -->

    <property type="INT" target="node" name="BufferPublishSize">
        The buffer size of the unicast datagram socket used by the Publisher, measured in the number of packets.
        Changing this value at runtime is an inherently unsafe operation that will pause all network communications and
        may result in the termination of all cluster services.
    </property>
    <property type="INT" target="node" name="BufferReceiveSize">
        The buffer size of the unicast datagram socket used by the Receiver, measured in the number of packets. Changing
        this value at runtime is an inherently unsafe operation that will pause all network communications and may
        result in the termination of all cluster services.
    </property>
    <property type="INT" target="node" name="BurstCount">
        The maximum number of packets to send without pausing. Anything less than one (e.g. zero) means no limit.
    </property>
    <property type="INT" target="node" name="BurstDelay">
        The number of milliseconds to pause between bursts. Anything less than one (e.g. zero) is treated as one
        millisecond.
    </property>
    <property type="INT" target="node" name="CpuCount">
        Number of CPU cores for the machine this Member is running on.
    </property>
    <property type="BOOL" target="node" name="FlowControlEnabled">
        Indicates whether or not FlowControl is enabled.
    </property>
    <property type="INT" target="node" name="Id">
        The short Member id that uniquely identifies the Member at this point in time and does not change for the life
        of this Member.
    </property>
    <property type="STR" target="node" name="LoggingDestination">
        The output device used by the logging system. Valid values are stdout, stderr, jdk, log4j, or a file name.
    </property>
    <property type="STR" target="node" name="LoggingFormat">
        Specifies how messages will be formatted before being passed to the log destination
    </property>
    <property type="INT" target="node" name="LoggingLevel">
        Specifies which logged messages will be output to the log destination. Valid values are non-negative integers or
        -1 to disable all logger output.
    </property>
    <property type="INT" target="node" name="LoggingLimit">
        The maximum number of characters that the logger daemon will process from the message queue before discarding
        all remaining messages in the queue. Valid values are integers in the range [0...]. Zero implies no limit.
    </property>
    <property type="INT" target="node" name="MachineId">
        The Member`s machine Id.
    </property>
    <property type="STR" target="node" name="MachineName">
        A configured name that should be the same for all Members that are on the same physical machine, and different
        for Members that are on different physical machines.
    </property>
    <property type="STR" target="node" name="MemberName">
        A configured name that must be unique for every Member.
    </property>
    <property type="INT" target="node" name="MemoryAvailableMB">
        The total amount of memory in the JVM available for new objects in MB.
    </property>
    <property type="INT" target="node" name="MemoryMaxMB">
        The maximum amount of memory that the JVM will attempt to use in MB.
    </property>
    <property type="STR" target="node" name="MulticastAddress">
        The IP address of the Member`s MulticastSocket for group communication.
    </property>
    <property type="BOOL" target="node" name="MulticastEnabled">
        Specifies whether or not this Member uses multicast for group communication. If false, this Member will use the
        WellKnownAddresses to join the cluster and point-to-point unicast to communicate with other Members of the
        cluster.
    </property>
    <property type="INT" target="node" name="MulticastPort">
        The port of the Member`s MulticastSocket for group communication.
    </property>
    <property type="INT" target="node" name="MulticastTTL">
        The time-to-live for multicast packets sent out on this Member`s MulticastSocket.
    </property>
    <property type="INT" target="node" name="MulticastThreshold">
        The percentage (0 to 100) of the servers in the cluster that a packet will be sent to, above which the packet
        will be multicasted and below which it will be unicasted.
    </property>
    <property type="BOOL" target="node" name="NackEnabled">
        Indicates whether or not the early packet loss detection protocol is enabled.
    </property>
    <property type="LONG" target="node" name="NackSent">
        The total number of NACK packets sent since the node statistics were last reset.
    </property>
    <property type="FLOAT" target="node" name="PacketDeliveryEfficiency">
        The efficiency of packet loss detection and retransmission. A low efficiency is an indication that there is a
        high rate of unnecessary packet retransmissions.
    </property>
    <property type="LONG" target="node" name="PacketsBundled">
        The total number of packets which were bundled prior to transmission. The total number of network transmissions
        is equal to (PacketsSent - PacketsBundled).
    </property>
    <property type="LONG" target="node" name="PacketsReceived">
        The number of packets received since the node statistics were last reset.
    </property>
    <property type="LONG" target="node" name="PacketsRepeated">
        The number of duplicate packets received since the node statistics were last reset.
    </property>
    <property type="LONG" target="node" name="PacketsResent">
        The number of packets resent since the node statistics were last reset. A packet is resent when there is no ACK
        received within a timeout period.
    </property>
    <property type="LONG" target="node" name="PacketsResentEarly">
        The total number of packets resent ahead of schedule. A packet is resent ahead of schedule when there is a NACK
        indicating that the packet has not been received.
    </property>
    <property type="LONG" target="node" name="PacketsResentExcess">
        The total number of packet retransmissions which were later proven unnecessary.
    </property>
    <property type="LONG" target="node" name="PacketsSent">
        The number of packets sent since the node statistics were last reset.
    </property>
    <property type="INT" target="node" name="Priority">
        The priority or "weight" of the Member; used to determine tie-breakers.
    </property>
    <property type="STR" target="node" name="ProcessName">
        A configured name that should be the same for Members that are in the same process (JVM), and different for
        Members that are in different processes. If not explicitly provided, for processes running with JRE 1.5 or
        higher the name will be calculated internally as the Name attribute of the system RuntimeMXBean, which normally
        represents the process identifier (PID).
    </property>
    <property type="STR" target="node" name="ProductEdition">
        The product edition this Member is running. Possible values are: Standard Edition (SE), Enterprise Edition (EE),
        Grid Edition (GE).
    </property>
    <property type="FLOAT" target="node" name="PublisherPacketUtilization">
        The publisher packet utilization for this cluster node since the node socket was last reopened. This value is a
        ratio of the number of bytes sent to the number that would have been sent had all packets been full. A low
        utilization indicates that data is not being sent in large enough chunks to make efficient use of the network.
    </property>
    <property type="FLOAT" target="node" name="PublisherSuccessRate">
        The publisher success rate for this cluster node since the node statistics were last reset. Publisher success
        rate is a ratio of the number of packets successfully delivered in a first attempt to the total number of sent
        packets. A failure count is incremented when there is no ACK received within a timeout period. It could be
        caused by either very high network latency or a high packet drop rate.
    </property>
    <property type="STR" target="node" name="RackName">
        A configured name that should be the same for Members that are on the same physical "rack" (or frame or cage),
        and different for Members that are on different physical "racks".
    </property>
    <property type="FLOAT" target="node" name="ReceiverPacketUtilization">
        The receiver packet utilization for this cluster node since the socket was last reopened. This value is a ratio
        of the number of bytes received to the number that would have been received had all packets been full. A low
        utilization indicates that data is not being sent in large enough chunks to make efficient use of the network.
    </property>
    <property type="FLOAT" target="node" name="ReceiverSuccessRate">
        The receiver success rate for this cluster node since the node statistics were last reset. Receiver success rate
        is a ratio of the number of packets successfully acknowledged in a first attempt to the total number of received
        packets. A failure count is incremented when a re-delivery of previously received packet is detected. It could
        be caused by either very high inbound network latency or lost ACK packets.
    </property>
    <property type="DATE" target="node" name="RefreshTime">
        The timestamp when this model was last retrieved from a corresponding node. For local servers it is the local
        time.
    </property>
    <property type="INT" target="node" name="ResendDelay">
        The minimum number of milliseconds that a packet will remain queued in the Publisher`s re-send queue before it
        is resent to the recipient(s) if the packet has not been acknowledged. Setting this value too low can overflow
        the network with unnecessary repetitions. Setting the value too high can increase the overall latency by
        delaying the re-sends of dropped packets. Additionally, change of this value may need to be accompanied by a
        change in SendAckDelay value.
    </property>
    <property type="STR" target="node" name="RoleName">
        A configured name that can be used to indicate the role of a Member to the application. While managed by
        Coherence, this property is used only by the application.
    </property>
    <property type="INT" target="node" name="SendAckDelay">
        The minimum number of milliseconds between the queueing of an Ack packet and the sending of the same. This value
        should be not more then a half of the ResendDelay value.
    </property>
    <property type="INT" target="node" name="SendQueueSize">
        The number of packets currently scheduled for delivery. This number includes both packets that are to be sent
        immediately and packets that have already been sent and awaiting for acknowledgment. Packets that do not receive
        an acknowledgment within ResendDelay interval will be automatically resent.
    </property>
    <property type="STR" target="node" name="SiteName">
        A configured name that should be the same for Members that are on the same physical site (e.g. data center), and
        different for Members that are on different physical sites.
    </property>
    <property type="INT" target="node" name="SocketCount">
        Number of CPU sockets for the machine this Member is running on.
    </property>
    <property type="STR" target="node" name="Statistics">
        Statistics for this cluster node in a human readable format.
    </property>
    <property type="LONG" target="node" name="TcpRingFailures">
        The number of recovered TcpRing disconnects since the node statistics were last reset. A recoverable disconnect
        is an abnormal event that is registered when the TcpRing peer drops the TCP connection, but recovers after no
        more then maximum configured number of attempts.This value will be -1 if the TcpRing is disabled.
    </property>
    <property type="LONG" target="node" name="TcpRingTimeouts">
        The number of TcpRing timeouts since the node statistics were last reset. A timeout is a normal, but relatively
        rare event that is registered when the TcpRing peer did not ping this node within a heartbeat interval. This
        value will be -1 if the TcpRing is disabled.
    </property>
    <property type="DATE" target="node" name="Timestamp">
        The date/time value (in cluster time) that this Member joined the cluster.
    </property>
    <property type="INT" target="node" name="TrafficJamCount">
        The maximum total number of packets in the send and resend queues that forces the publisher to pause client
        threads. Zero means no limit.
    </property>
    <property type="INT" target="node" name="TrafficJamDelay">
        The number of milliseconds to pause client threads when a traffic jam condition has been reached. Anything less
        than one (e.g. zero) is treated as one millisecond.
    </property>
    <property type="STR" target="node" name="UnicastAddress">
        The IP address of the Member`s DatagramSocket for point-to-point communication.
    </property>
    <property type="INT" target="node" name="UnicastPort">
        The port of the Member`s DatagramSocket for point-to-point communication.
    </property>
    <property type="INT" target="node" name="WeakestChannel">
        The id of the cluster node to which this node is having the most difficulty communicating, or -1 if none is
        found. A channel is considered to be weak if either the point-to-point publisher or receiver success rates are
        below 1.0.
    </property>
    <property type="STR[]" target="node" name="WellKnownAddresses">
        An array of well-known socket addresses that this Member uses to join the cluster.
    </property>

    <!-- ================ node ===================  -->
    <property type="INT" target="service" name="BackupCount">
        The number of backups for every cache storage.
    </property>
    <property type="INT" target="service" name="OwnedPartitionsBackup">
        The number of partitions that this Member backs up (responsible for the backup storage).
    </property>
    <property type="INT" target="service" name="OwnedPartitionsPrimary">
        The number of partitions that this Member owns (responsible for the primary storage).
    </property>
    <property type="INT" target="service" name="PartitionsAll">
        The total number of partitions that every cache storage will be divided into.
    </property>
    <property type="INT" target="service" name="PartitionsEndangered">
        The total number of partitions that are not currently backed up.
    </property>
    <property type="INT" target="service" name="PartitionsUnbalanced">
        The total number of primary and backup partitions which remain to be transferred until the partition
        distribution across the storage enabled service members is fully balanced.
    </property>
    <property type="INT" target="service" name="PartitionsVulnerable">
        The total number of partitions that are backed up on the same machine where the primary partition owner resides.
    </property>
    <property type="DATE" target="service" name="RefreshTime">
        The timestamp when this model was last retrieved from a corresponding node. For local servers it is the local
        time.
    </property>
    <property type="FLOAT" target="service" name="RequestAverageDuration">
        The average duration (in milliseconds) of an individual synchronous request issued by the service since the last
        time the statistics were reset.
    </property>
    <property type="LONG" target="service" name="RequestMaxDuration">
        The maximum duration (in milliseconds) of a synchronous request issued by the service since the last time the
        statistics were reset.
    </property>
    <property type="LONG" target="service" name="RequestPendingCount">
        The number of pending synchronous requests issued by the service.
    </property>
    <property type="LONG" target="service" name="RequestPendingDuration">
        The duration (in milliseconds) of the oldest pending synchronous request issued by the service.
    </property>
    <property type="LONG" target="service" name="RequestTimeoutCount">
        The total number of timed-out requests since the last time the statistics were reset.
    </property>
    <property type="LONG" target="service" name="RequestTimeoutMillis">
        The default timeout value in milliseconds for requests that can be timed-out (e.g. implement the
        com.tangosol.net.PriorityTask interface), but do not explicitly specify the request timeout value.
    </property>
    <property type="LONG" target="service" name="RequestTotalCount">
        The total number of synchronous requests issued by the service since the last time the statistics were reset.
    </property>
    <property type="BOOL" target="service" name="Running">
        Specifies whether or not the service is running.
    </property>
    <property type="STR" target="service" name="Statistics">
        Statistics for this service in human readable format.
    </property>
    <property type="STR" target="service" name="StatusHA">
        The High Availability status for this service. The value of MACHINE-SAFE means that all the cluster nodes
        running on any given machine could be stoppped at once without data loss. The value of NODE-SAFE means that any
        cluster node could be stoppped without data loss. The value of ENDANGERED indicates that abnormal termination of
        any cluster node that runs this service may cause data loss.
    </property>
    <property type="BOOL" target="service" name="StorageEnabled">
        Specifies whether or not the local storage is enabled for this cluster Member.
    </property>
    <property type="INT" target="service" name="StorageEnabledCount">
        Specifies the total number of cluster nodes running this Service for which local storage is enabled.
    </property>
    <property type="FLOAT" target="service" name="TaskAverageDuration">
        The average duration (in milliseconds) of an individual task execution.
    </property>
    <property type="INT" target="service" name="TaskBacklog">
        The size of the backlog queue that holds tasks scheduled to be executed by one of the service threads.
    </property>
    <property type="LONG" target="service" name="TaskCount">
        The total number of executed tasks since the last time the statistics were reset.
    </property>
    <property type="INT" target="service" name="TaskHungCount">
        The total number of currently executing hung tasks.
    </property>
    <property type="LONG" target="service" name="TaskHungDuration">
        The longest currently executing hung task duration in milliseconds.
    </property>
    <property type="STR" target="service" name="TaskHungTaskId">
        The id of the of the longest currently executing hung task.
    </property>
    <property type="LONG" target="service" name="TaskHungThresholdMillis">
        The amount of time in milliseconds that a task can execute before it is considered hung. Note that a posted task
        that has not yet started is never considered as hung.
    </property>
    <property type="INT" target="service" name="TaskMaxBacklog">
        The maximum size of the backlog queue since the last time the statistics were reset.
    </property>
    <property type="INT" target="service" name="TaskTimeoutCount">
        The total number of timed-out tasks since the last time the statistics were reset.
    </property>
    <property type="LONG" target="service" name="TaskTimeoutMillis">
        The default timeout value in milliseconds for tasks that can be timed-out (e.g. implement the
        com.tangosol.net.PriorityTask interface), but do not explicitly specify the task execution timeout value.
    </property>
    <property type="INT" target="service" name="ThreadAbandonedCount">
        The number of abandoned threads from the service thread pool. A thread is abandoned and replaced with a new
        thread if it executes a task for a period of time longer than execution timeout and all attempts to interrupt it
        fail.
    </property>
    <property type="FLOAT" target="service" name="ThreadAverageActiveCount">
        The average number of active (not idle) threads in the service thread pool since the last time the statistics
        were reset.
    </property>
    <property type="INT" target="service" name="ThreadCount">
        The number of threads in the service thread pool.
    </property>
    <property type="INT" target="service" name="ThreadIdleCount">
        The number of currently idle threads in the service thread pool.
    </property>
    <property type="STR" target="service" name="Type">
        The type identifier of the service.
    </property>

    <!--<property type="" target="service" name=""></property>-->
    <!--<property type="" target="service" name=""></property>-->
</config>
